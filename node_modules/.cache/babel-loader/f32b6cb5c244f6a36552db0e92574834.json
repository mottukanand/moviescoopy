{"ast":null,"code":"import _slicedToArray from \"C:/Users/roshna mittu/Desktop/mottu/Interview/Focaloid/moviescoopy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\roshna mittu\\\\Desktop\\\\mottu\\\\Interview\\\\Focaloid\\\\moviescoopy\\\\src\\\\components\\\\MovieSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Table, Input, Button, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\nimport { moviesData } from \"../mock/movies\";\nimport NavBar from \"./NavBar\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport \"../styles/react-paginate.scss\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst rowStyle = {\n  marginBottom: \"5px\",\n  marginTop: \"5px\"\n};\n\nconst MovieSearch = props => {\n  _s();\n\n  const history = useHistory();\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        movies = _useState2[0],\n        setMovies = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        myMovies = _useState4[0],\n        setMyMovies = _useState4[1];\n\n  const _useState5 = useState(10),\n        _useState6 = _slicedToArray(_useState5, 2),\n        perPageData = _useState6[0],\n        setPerPageData = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        togglePagination = _useState8[0],\n        seTogglePagination = _useState8[1];\n\n  useEffect(() => {\n    let page_Data = moviesData.slice(0, perPageData);\n    setMovies(page_Data);\n  }, []); //   useEffect(() => {\n  //     fetch('http://www.omdbapi.com/?apikey=cf1d59ef&s=batman')\n  //  .then((success) => { success.json() })\n  //  .catch((error)=>{ console.log(error)});\n  //   }, []);\n\n  const handleMovieName = e => {\n    if (e.target.value) {\n      var searchedMovies = moviesData.filter(value => value.title.toLowerCase().includes(e.target.value.trim().toLowerCase()));\n      seTogglePagination(false);\n      setMovies(searchedMovies);\n    } else {\n      seTogglePagination(true);\n      let page_Data = moviesData.slice(0, perPageData);\n      setMovies(page_Data);\n    }\n  };\n\n  const handleMovieSelect = (e, movie) => {\n    if (e.target.checked) {\n      setMyMovies([...myMovies, movie.id]);\n    } else {\n      let films = myMovies.filter(val => val !== movie.id);\n      setMyMovies(films);\n    }\n  };\n\n  const handleAddMovies = () => {\n    let existedMovies = JSON.parse(localStorage.getItem(\"movies\")) || [];\n    existedMovies.length ? existedMovies = [...existedMovies, ...myMovies] : existedMovies = [...myMovies];\n    let uniqueMovies = [...new Set(existedMovies)];\n    localStorage.setItem(\"movies\", JSON.stringify(uniqueMovies));\n    props.addMyMovies(uniqueMovies);\n    history.push(\"/mymovies\");\n  };\n\n  const handlePageCount = () => {\n    var pageCount = Math.ceil(parseInt(moviesData.length) / perPageData);\n    return pageCount;\n  };\n\n  const onPageChange = currentPage => {\n    let start = currentPage.selected * perPageData;\n    let end = start + perPageData;\n    let page_Data = moviesData.slice(start, end);\n    setMovies(page_Data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        style: {\n          background: \"#c7c4ec\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h5\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Movies Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          style: rowStyle,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Search Movie Name Here\",\n              onChange: e => handleMovieName(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 2,\n            children: myMovies.length ? /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              style: {\n                float: \"right\"\n              },\n              onClick: handleAddMovies,\n              children: \"Add To My Movies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          style: rowStyle,\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              hover: true,\n              responsive: true,\n              bordered: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"#\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"TiTle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Overview\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: movies && movies.length ? movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"checkbox\",\n                      checked: myMovies.includes(movie.id),\n                      onChange: e => handleMovieSelect(e, movie)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: movie.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: movie.overview\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: 3,\n                    children: \"No Results\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), togglePagination && /*#__PURE__*/_jsxDEV(ReactPaginate, {\n              previousLabel: 'previous',\n              nextLabel: 'next',\n              breakLabel: \"...\",\n              breakClassName: \"break-me\",\n              pageCount: handlePageCount(),\n              marginPagesDisplayed: 2,\n              pageRangeDisplayed: 3,\n              containerClassName: \"vx-pagination icon-pagination pagination-end mt-2\",\n              activeClassName: \"active\",\n              onPageChange: onPageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MovieSearch, \"3SdYXcjo3D1HwI2dZ0NrjOX8bhw=\", false, function () {\n  return [useHistory];\n});\n\n_c = MovieSearch;\n\nconst mapStateToProps = state => {\n  return {\n    moviesMy: state.myMovies\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addMyMovies: myMoviesData => dispatch({\n    type: \"ADD_MY_MOVIES_SUCCESS\",\n    payload: myMoviesData\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieSearch);\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"sources":["C:/Users/roshna mittu/Desktop/mottu/Interview/Focaloid/moviescoopy/src/components/MovieSearch.js"],"names":["React","useState","useEffect","Row","Col","Table","Input","Button","Card","CardBody","CardHeader","CardTitle","moviesData","NavBar","useHistory","ReactPaginate","connect","rowStyle","marginBottom","marginTop","MovieSearch","props","history","movies","setMovies","myMovies","setMyMovies","perPageData","setPerPageData","togglePagination","seTogglePagination","page_Data","slice","handleMovieName","e","target","value","searchedMovies","filter","title","toLowerCase","includes","trim","handleMovieSelect","movie","checked","id","films","val","handleAddMovies","existedMovies","JSON","parse","localStorage","getItem","length","uniqueMovies","Set","setItem","stringify","addMyMovies","push","handlePageCount","pageCount","Math","ceil","parseInt","onPageChange","currentPage","start","selected","end","background","float","map","index","overview","mapStateToProps","state","moviesMy","mapDispatchToProps","dispatch","myMoviesData","type","payload"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Table, Input, Button, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\nimport { moviesData } from \"../mock/movies\";\r\nimport NavBar from \"./NavBar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"../styles/react-paginate.scss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst rowStyle = {\r\n  marginBottom: \"5px\",\r\n  marginTop: \"5px\"\r\n};\r\nconst MovieSearch = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [movies, setMovies] = useState(\"\");\r\n  const [myMovies, setMyMovies] = useState([]);\r\n  const [perPageData, setPerPageData] = useState(10)\r\n  const [togglePagination, seTogglePagination] = useState(true)\r\n\r\n  useEffect(() => {\r\n    let page_Data = moviesData.slice(0, perPageData)\r\n    setMovies(page_Data);\r\n  }, []);\r\n\r\n  //   useEffect(() => {\r\n  //     fetch('http://www.omdbapi.com/?apikey=cf1d59ef&s=batman')\r\n  //  .then((success) => { success.json() })\r\n  //  .catch((error)=>{ console.log(error)});\r\n  //   }, []);\r\n\r\n  const handleMovieName = (e) => {\r\n    if (e.target.value) {\r\n      var searchedMovies = moviesData.filter((value) =>\r\n        value.title.toLowerCase().includes(e.target.value.trim().toLowerCase())\r\n      );\r\n      seTogglePagination(false)\r\n      setMovies(searchedMovies);\r\n    } else {\r\n      seTogglePagination(true)\r\n      let page_Data = moviesData.slice(0, perPageData)\r\n      setMovies(page_Data);\r\n    }\r\n  };\r\n\r\n  const handleMovieSelect = (e, movie) => {\r\n    if (e.target.checked) {\r\n      setMyMovies([...myMovies, movie.id]);\r\n    } else {\r\n      let films = myMovies.filter((val) => val !== movie.id);\r\n      setMyMovies(films);\r\n    }\r\n  };\r\n\r\n  const handleAddMovies = () => {\r\n    let existedMovies = JSON.parse(localStorage.getItem(\"movies\")) || [];\r\n    existedMovies.length ? (existedMovies = [...existedMovies, ...myMovies]) : (existedMovies = [...myMovies])\r\n    let uniqueMovies = [...new Set(existedMovies)];\r\n    localStorage.setItem(\"movies\", JSON.stringify(uniqueMovies));\r\n    props.addMyMovies(uniqueMovies)\r\n    history.push(\"/mymovies\");\r\n  };\r\n\r\n  const handlePageCount = () => {\r\n    var pageCount = Math.ceil(parseInt(moviesData.length) / perPageData);\r\n    return pageCount;\r\n  }\r\n\r\n  const onPageChange = (currentPage) => {\r\n    let start = currentPage.selected * perPageData;\r\n    let end = start + perPageData;\r\n    let page_Data = moviesData.slice(start, end)\r\n    setMovies(page_Data);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Card style={{ marginTop: \"20px\" }}>\r\n        <CardHeader style={{ background: \"#c7c4ec\" }}>\r\n          <CardTitle tag=\"h5\" ><b>Movies Search</b></CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row style={rowStyle}>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Search Movie Name Here\"\r\n                onChange={(e) => handleMovieName(e)}\r\n              />\r\n            </Col>\r\n            <Col sm={2}>\r\n              {myMovies.length ? (\r\n                <Button\r\n                  color=\"primary\"\r\n                  style={{ float: \"right\" }}\r\n                  onClick={handleAddMovies}\r\n                >\r\n                  Add To My Movies\r\n                </Button>\r\n              ) : null}\r\n            </Col>\r\n          </Row>\r\n          <Row style={rowStyle}>\r\n            <Col>\r\n              <Table striped hover responsive bordered>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>TiTle</th>\r\n                    <th>Overview</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {movies && movies.length ? (\r\n                    movies.map((movie, index) => (\r\n                      <tr key={index}>\r\n                        <th>\r\n                          {\" \"}\r\n                          <Input\r\n                            type=\"checkbox\"\r\n                            checked={myMovies.includes(movie.id)}\r\n                            onChange={(e) => handleMovieSelect(e, movie)}\r\n                          />\r\n                        </th>\r\n                        <td>{movie.title}</td>\r\n                        <td>{movie.overview}</td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                      <tr>\r\n                        <td colSpan={3}>No Results</td>\r\n                      </tr>\r\n                    )}\r\n                </tbody>\r\n              </Table>\r\n              {togglePagination &&\r\n                <ReactPaginate\r\n                  previousLabel={'previous'}\r\n                  nextLabel={'next'}\r\n                  breakLabel={\"...\"}\r\n                  breakClassName={\"break-me\"}\r\n                  pageCount={handlePageCount()}\r\n                  marginPagesDisplayed={2}\r\n                  pageRangeDisplayed={3}\r\n                  containerClassName={\"vx-pagination icon-pagination pagination-end mt-2\"}\r\n                  activeClassName={\"active\"}\r\n                  onPageChange={onPageChange}\r\n                />\r\n              }\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    moviesMy: state.myMovies\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addMyMovies: (myMoviesData) => dispatch({ type: \"ADD_MY_MOVIES_SUCCESS\", payload: myMoviesData }),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieSearch);"]},"metadata":{},"sourceType":"module"}
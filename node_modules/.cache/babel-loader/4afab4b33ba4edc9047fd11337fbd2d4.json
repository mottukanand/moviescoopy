{"ast":null,"code":"import _slicedToArray from \"C:/Users/roshna mittu/Desktop/mottu/Interview/Focaloid/moviescoopy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\roshna mittu\\\\Desktop\\\\mottu\\\\Interview\\\\Focaloid\\\\moviescoopy\\\\src\\\\components\\\\MyMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardImg, CardText, CardBody, CardTitle, Row, Col, CardHeader } from \"reactstrap\";\nimport NavBar from \"./NavBar\";\nimport { moviesData } from \"../mock/movies\";\nimport { connect } from \"react-redux\";\nimport ReactPaginate from \"react-paginate\";\nimport \"../styles/react-paginate.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyMovies = () => {\n  _s();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        allMyMovies = _useState2[0],\n        setAllMyMovies = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        movies = _useState4[0],\n        setMovies = _useState4[1];\n\n  const _useState5 = useState(9),\n        _useState6 = _slicedToArray(_useState5, 2),\n        perPageData = _useState6[0],\n        setPerPageData = _useState6[1];\n\n  useEffect(() => {\n    let movies = JSON.parse(localStorage.getItem(\"movies\")) || [];\n    let moviesObj = moviesData.filter(value => movies.includes(value.id));\n    let page_Data = moviesObj.slice(0, perPageData);\n    setAllMyMovies(moviesObj);\n    setMovies(page_Data);\n  }, []);\n\n  const handlePageCount = () => {\n    let moviesArr = JSON.parse(localStorage.getItem(\"movies\")) || [];\n    var pageCount = Math.ceil(parseInt(moviesArr.length) / perPageData);\n    return pageCount;\n  };\n\n  const onPageChange = currentPage => {\n    let start = currentPage.selected * perPageData;\n    let end = start + perPageData;\n    let page_Data = allMyMovies.slice(start, end);\n    setMovies(page_Data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        height: \"100%\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h5\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"My Movies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: movies && movies.length ? movies.map((movie, index) => /*#__PURE__*/_jsxDEV(Col, {\n            sm: 4,\n            style: {\n              marginBottom: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                height: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                style: {\n                  background: \"#c7c4ec\"\n                },\n                children: [\" \", /*#__PURE__*/_jsxDEV(CardTitle, {\n                  tag: \"h5\",\n                  children: movie.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 68\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(CardText, {\n                  children: movie.overview\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"No Data To Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), movies && movies.length ? /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n              previousLabel: 'previous',\n              nextLabel: 'next',\n              breakLabel: \"...\",\n              breakClassName: \"break-me\",\n              pageCount: handlePageCount(),\n              marginPagesDisplayed: 2,\n              pageRangeDisplayed: 3,\n              containerClassName: \"vx-pagination icon-pagination pagination-end mt-2\",\n              activeClassName: \"active\",\n              onPageChange: onPageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyMovies, \"qBCViL6ylcmFqJKErtMmXubC07Y=\");\n\n_c = MyMovies;\n\nconst mapStateToProps = state => {\n  return {\n    moviesMy: state.myMovies\n  };\n};\n\nexport default connect(mapStateToProps, null)(MyMovies);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyMovies\");","map":{"version":3,"sources":["C:/Users/roshna mittu/Desktop/mottu/Interview/Focaloid/moviescoopy/src/components/MyMovies.js"],"names":["React","useState","useEffect","Card","CardImg","CardText","CardBody","CardTitle","Row","Col","CardHeader","NavBar","moviesData","connect","ReactPaginate","MyMovies","allMyMovies","setAllMyMovies","movies","setMovies","perPageData","setPerPageData","JSON","parse","localStorage","getItem","moviesObj","filter","value","includes","id","page_Data","slice","handlePageCount","moviesArr","pageCount","Math","ceil","parseInt","length","onPageChange","currentPage","start","selected","end","height","marginTop","map","movie","index","marginBottom","background","title","overview","mapStateToProps","state","moviesMy","myMovies"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  CardHeader\r\n} from \"reactstrap\";\r\nimport NavBar from \"./NavBar\";\r\nimport { moviesData } from \"../mock/movies\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"../styles/react-paginate.scss\";\r\n\r\nconst MyMovies = () => {\r\n  const [allMyMovies, setAllMyMovies] = useState([]);\r\n  const [movies, setMovies] = useState([]);\r\n  const [perPageData, setPerPageData] = useState(9);\r\n\r\n  useEffect(() => {\r\n    let movies = JSON.parse(localStorage.getItem(\"movies\")) || [];\r\n    let moviesObj = moviesData.filter((value) => movies.includes(value.id));\r\n    let page_Data = moviesObj.slice(0, perPageData)\r\n    setAllMyMovies(moviesObj);\r\n    setMovies(page_Data);\r\n  }, []);\r\n\r\n  const handlePageCount = () => {\r\n    let moviesArr = JSON.parse(localStorage.getItem(\"movies\")) || []\r\n    var pageCount = Math.ceil(parseInt(moviesArr.length) / perPageData);\r\n    return pageCount;\r\n  }\r\n\r\n  const onPageChange = (currentPage) => {\r\n    let start = currentPage.selected * perPageData;\r\n    let end = start + perPageData;\r\n    let page_Data = allMyMovies.slice(start, end)\r\n    setMovies(page_Data);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Card style={{ height: \"100%\", marginTop: \"20px\" }}>\r\n        <CardHeader><CardTitle tag=\"h5\" ><b>My Movies</b></CardTitle></CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            {movies && movies.length\r\n              ? movies.map((movie, index) => (\r\n                <Col sm={4} key={index} style={{ marginBottom: \"10px\" }}>\r\n                  <Card style={{ height: \"100%\" }}>\r\n                    <CardHeader style={{ background: \"#c7c4ec\" }}> <CardTitle tag=\"h5\" >{movie.title}</CardTitle></CardHeader>\r\n                    <CardBody>\r\n                      <CardText>{movie.overview}</CardText>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              ))\r\n              : <h2>No Data To Show</h2>}\r\n          </Row>\r\n          {movies && movies.length ?\r\n            <Row>\r\n              <Col>\r\n                <ReactPaginate\r\n                  previousLabel={'previous'}\r\n                  nextLabel={'next'}\r\n                  breakLabel={\"...\"}\r\n                  breakClassName={\"break-me\"}\r\n                  pageCount={handlePageCount()}\r\n                  marginPagesDisplayed={2}\r\n                  pageRangeDisplayed={3}\r\n                  containerClassName={\"vx-pagination icon-pagination pagination-end mt-2\"}\r\n                  activeClassName={\"active\"}\r\n                  onPageChange={onPageChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            :\r\n            null}\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    moviesMy: state.myMovies\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(MyMovies);"]},"metadata":{},"sourceType":"module"}